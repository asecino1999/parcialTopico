{"ast":null,"code":"var correct = require(\"./correct.json\");\n\nexport class Filter {}\nexport class DolarSol extends Filter {\n  filtrar(inp) {\n    var temp = inp.match(/\\$(\\s)*[0-9]+(\\,[0-9]*)*(\\.[0-9]*)*/) || [];\n    temp.forEach(element => {\n      var num = new String(element).match(/[0-9]+(\\,[0-9]*)*(\\.[0-9]*)*/);\n\n      if (num) {\n        var value = parseFloat(num[0]) * 3.38;\n        inp = inp.replace(element, \"s/\" + value);\n      }\n    });\n    return inp; //.replace()\n  }\n\n}\nexport class Capitalice extends Filter {\n  // primera en mayuscula \n  filtrar(inp) {\n    var temp = inp.split(/\\s+/);\n    temp = temp.map(element => {\n      var first = element.charAt(0);\n      return first.toUpperCase() + element.substr(1);\n    });\n    var ret = temp.reduce((a, b) => a + \" \" + b);\n    return ret;\n  }\n\n}\nexport class filtrarEspacio extends Filter {\n  filtrar(inp) {\n    var exp = /\\s+/;\n    var temp = inp.split(exp);\n    var ret = temp.reduce((a, b) => a + \" \" + b);\n    console.log(temp);\n    return ret;\n  }\n\n}\nexport class filtrarCorrect extends Filter {\n  filtrar(inp) {\n    for (const key in correct) {\n      if (correct.hasOwnProperty(key)) {\n        //console.log(key)\n        //console.log(inp.search(key))\n        inp = inp.replace(key, correct[key]);\n      }\n    }\n\n    return inp;\n  }\n\n}\nexport class filtrarCorreo extends Filter {\n  filtrar(inp) {\n    var exp = /.*\\@.*\\..*/gm;\n    var temp = inp.match(exp) || [\"\"];\n    inp = temp.reduce((a, b) => a + \"\\n\" + b);\n    return inp;\n  }\n\n}\nexport class UpperCase extends Filter {\n  filtrar(inp) {\n    return inp.toUpperCase();\n  }\n\n}\nexport class LowCase extends Filter {\n  filtrar(inp) {\n    return inp.toLowerCase();\n  }\n\n}\nexport class Comments extends Filter {\n  filtrar(inp) {\n    // primero // liego /* */  # fdf\n    var exp = /(\\/\\/.*\\n)|\\/\\*[\\s\\S]*?\\*\\/|(\\#.*\\n)/g;\n    var temp = inp.match(exp) || [\"\"]; //console.log(\"temp\",temp)\n\n    inp = temp.reduce((a, b) => a + \"\\n\" + b);\n    return inp;\n  }\n\n}\nexport class DeleteHtml extends Filter {\n  filtrar(inp) {\n    return inp.replace(/\\<.*?\\>|\\<\\/.*?\\>/g, \"\");\n  }\n\n}\nexport class GetLink extends Filter {\n  filtrar(inp) {\n    var exp = /(http|https)\\:\\/\\/\\S+/g;\n    var temp = inp.match(exp) || [\"\"]; //console.log(\"temp\",temp)\n\n    inp = temp.reduce((a, b) => a + \"\\n\" + b);\n    return inp;\n  }\n\n}\nexport class FiltroXML extends Filter {\n  filtrar(inp) {\n    var exp = /(\\<[\\s\\S]*?\\>)[\\s\\S]*?(<\\/[\\s\\S]*?>)/;\n    var temp = inp.match(exp) || [\"\"]; //console.log(\"temp\",temp)\n\n    inp = temp[0].replace(/(\\<[\\s\\S]*?\\>)|(<\\/[\\s\\S]*?>)/g, \"\");\n    return inp;\n  }\n\n}\nexport class LineNum extends Filter {\n  filtrar(inp) {\n    var temp = inp.split(/\\n/g);\n    inp = temp.reduce((a, b, index) => a + \"\\n\" + (index + 1) + \" \" + b);\n    return inp;\n  }\n\n}\nexport class Used extends Filter {\n  filtrar(inp) {\n    var temp = inp.match(/[a-zA-Z][a-zA-Z][a-zA-Z]+/g) || [];\n    var conter = temp.map(ele => {\n      return (inp.match(ele) || []).length;\n    });\n    console.log(conter);\n\n    if (conter.length > 0) {\n      var max = conter.reduce((max, b, index) => conter[index] > conter[max] ? index : max);\n      return max > 0 ? temp[max] : \"\";\n    } else return \"\";\n  }\n\n}\nvar text = \"\\nJustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika  \\nJustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika  \\nJustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika  \\nexport class filtrarCorrect extends Filter {\\n    filtrar(inp:string):string{\\n        var exp:RegExp=/[^S-]*s+/\\n        var temp = inp.split(exp);\\n        console.log(temp)\\n        return \\\"\\\"\\n    }\\n}\\n//ddffd\\n#4565\\n/*fgdfg lk dfgd\\ngdfgdfgd \\nfgf*/\\nuon\\nqeu\\n$ 34324.456\\ndsdfdf@hghg.kjkl\\ndsdfdf@hghg.kjkl\\n\\n<Container>\\n<Row>\\n{butons.map((element:bot,index:number) => {\\nreturn (\\n  <Col  key={element.name+index} className=\\\"Col\\\">\\n    <button onClick={ ()=>this.setList(element)  }  >{element.name}</button>\\n  </Col>\\n)\\n})}\\n</Row>\\n</Container>\\n\\n\\n<div>lista de filtros : </div>\\n\\n\\n{this.RenderFilter()}\\n\\n<br/>\\n<div>input:</div>\\n<textarea value={this.state.in}  onChange={(ev)=>this.setIn(ev)}  cols={30} rows={10}></textarea>\\n<br/>\\n{/* Nota  en classname =  out \\n    se le agrego una propidad\\n    para que no filte el espacio por defecto \\n    white-space: pre-wrap;\\n */}\\n<div>Output:</div>\\n<div className=\\\"Out\\\" >{this.state.out} </div>\\n\\nhttps://stackoverflow.com/questions/2788112/what-is-the-regular-expression-for-not-whitespace-and-not-a-hyph/en\\n\\n\";\nvar text2 = \"\\n435 {+}\\n453\\n+tyyu\\n\\n\";\nconsole.log(\"log\", new Used().filtrar(text2));\nconsole.log(\"me compiladon\");","map":{"version":3,"sources":["/home/gerald/ingeSofware/topico/vie_oct_4/parcial/prob4/src/Filtros.tsx"],"names":["correct","require","Filter","DolarSol","filtrar","inp","temp","match","forEach","element","num","String","value","parseFloat","replace","Capitalice","split","map","first","charAt","toUpperCase","substr","ret","reduce","a","b","filtrarEspacio","exp","console","log","filtrarCorrect","key","hasOwnProperty","filtrarCorreo","UpperCase","LowCase","toLowerCase","Comments","DeleteHtml","GetLink","FiltroXML","LineNum","index","Used","conter","ele","length","max","text","text2"],"mappings":"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","sourcesContent":["var correct = require(\"./correct.json\")\n\nexport abstract class Filter {\n\n    abstract filtrar(inp: string): string\n}\n\n\nexport class DolarSol extends Filter {\n\n    filtrar(inp: string): string {\n\n        var temp = inp.match(/\\$(\\s)*[0-9]+(\\,[0-9]*)*(\\.[0-9]*)*/) || [];\n        temp.forEach((element: string) => {\n            var num = new String(element).match(/[0-9]+(\\,[0-9]*)*(\\.[0-9]*)*/)\n            if (num) {\n                var value = parseFloat(num[0]) * 3.38\n                inp = inp.replace(element, \"s/\" + value)\n            }\n        });\n        return inp//.replace()\n    }\n}\n\nexport class Capitalice extends Filter {// primera en mayuscula \n    filtrar(inp: string): string {\n        var temp: string[] = inp.split(/\\s+/)\n\n        temp = temp.map((element: string) => {\n            var first = element.charAt(0);\n            return first.toUpperCase() + element.substr(1)\n        });\n        var ret = temp.reduce((a: string, b: string) => a + \" \" + b)\n\n        return ret;\n    }\n}\n\n\nexport class filtrarEspacio extends Filter {\n\n    filtrar(inp: string): string {\n        var exp: RegExp = /\\s+/;\n        var temp = inp.split(exp)\n        var ret = temp.reduce((a: string, b: string) => a + \" \" + b)\n\n        console.log(temp)\n        return ret\n    }\n}\n\n\n\nexport class filtrarCorrect extends Filter {\n    filtrar(inp: string): string {\n        for (const key in correct) {\n            if (correct.hasOwnProperty(key)) {\n                //console.log(key)\n                //console.log(inp.search(key))\n                inp = inp.replace(key, correct[key])\n            }\n        }\n\n        return inp\n    }\n}\nexport class filtrarCorreo extends Filter {\n    filtrar(inp: string): string {\n\n        var exp: RegExp = /.*\\@.*\\..*/gm\n        var temp = inp.match(exp) || [\"\"]\n        inp = temp.reduce((a: string, b: string) => a + \"\\n\" + b)\n        return inp\n    }\n}\n\nexport class UpperCase extends Filter {\n    filtrar(inp: string): string {\n        return inp.toUpperCase();\n    }\n}\nexport class LowCase extends Filter {\n    filtrar(inp: string): string {\n        return inp.toLowerCase();\n    }\n}\nexport class Comments extends Filter {\n    filtrar(inp: string): string {\n        // primero // liego /* */  # fdf\n        var exp: RegExp = /(\\/\\/.*\\n)|\\/\\*[\\s\\S]*?\\*\\/|(\\#.*\\n)/g\n        var temp = inp.match(exp) || [\"\"]\n        //console.log(\"temp\",temp)\n        inp = temp.reduce((a: string, b: string) => a + \"\\n\" + b)\n        return inp\n    }\n}\nexport class DeleteHtml extends Filter {\n    filtrar(inp: string): string {\n\n        return inp.replace(/\\<.*?\\>|\\<\\/.*?\\>/g, \"\")\n    }\n}\nexport class GetLink extends Filter {\n    filtrar(inp: string): string {\n\n        var exp: RegExp = /(http|https)\\:\\/\\/\\S+/g\n        var temp = inp.match(exp) || [\"\"]\n        //console.log(\"temp\",temp)\n        inp = temp.reduce((a: string, b: string) => a + \"\\n\" + b)\n        return inp\n    }\n}\n\nexport class FiltroXML extends Filter {\n    filtrar(inp: string): string {\n\n        var exp: RegExp = /(\\<[\\s\\S]*?\\>)[\\s\\S]*?(<\\/[\\s\\S]*?>)/\n        var temp = inp.match(exp) || [\"\"]\n        //console.log(\"temp\",temp)\n        inp = temp[0].replace(/(\\<[\\s\\S]*?\\>)|(<\\/[\\s\\S]*?>)/g, \"\")\n        return inp\n    }\n}\n\nexport class LineNum extends Filter {\n    filtrar(inp: string): string {\n        var temp: string[] = inp.split(/\\n/g)\n        inp = temp.reduce((a, b, index) => a + \"\\n\" + (index + 1) + \" \" + b);\n        return inp\n    }\n}\nexport class Used extends Filter {\n    filtrar(inp: string): string {\n        var temp: string[] = inp.match(/[a-zA-Z][a-zA-Z][a-zA-Z]+/g) || []\n\n        var conter = temp.map((ele: string ): number => {\n            return (inp.match(ele)||[]).length\n        })\n        console.log(conter)\n        if (conter.length > 0) {\n            var max = conter.reduce((max: number, b: number, index: number) => conter[index] > conter[max] ? index : max)\n            return max > 0 ? temp[max] : \"\"\n        }else\n            return \"\"\n    }\n}\n\nvar text = `\nJustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika  \nJustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika  \nJustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika JustMonika  \nexport class filtrarCorrect extends Filter {\n    filtrar(inp:string):string{\n        var exp:RegExp=/[^\\S-]*\\s+/\n        var temp = inp.split(exp);\n        console.log(temp)\n        return \"\"\n    }\n}\n//ddffd\n#4565\n/*fgdfg lk dfgd\ngdfgdfgd \nfgf*/\nuon\nqeu\n$ 34324.456\ndsdfdf@hghg.kjkl\ndsdfdf@hghg.kjkl\n\n<Container>\n<Row>\n{butons.map((element:bot,index:number) => {\nreturn (\n  <Col  key={element.name+index} className=\"Col\">\n    <button onClick={ ()=>this.setList(element)  }  >{element.name}</button>\n  </Col>\n)\n})}\n</Row>\n</Container>\n\n\n<div>lista de filtros : </div>\n\n\n{this.RenderFilter()}\n\n<br/>\n<div>input:</div>\n<textarea value={this.state.in}  onChange={(ev)=>this.setIn(ev)}  cols={30} rows={10}></textarea>\n<br/>\n{/* Nota  en classname =  out \n    se le agrego una propidad\n    para que no filte el espacio por defecto \n    white-space: pre-wrap;\n */}\n<div>Output:</div>\n<div className=\"Out\" >{this.state.out} </div>\n\nhttps://stackoverflow.com/questions/2788112/what-is-the-regular-expression-for-not-whitespace-and-not-a-hyph/en\n\n`\nvar text2 = `\n435 {+}\n453\n+tyyu\n\n`\n\nconsole.log(\"log\", new Used().filtrar(text2))\n\n\nconsole.log(\"me compiladon\")"]},"metadata":{},"sourceType":"module"}